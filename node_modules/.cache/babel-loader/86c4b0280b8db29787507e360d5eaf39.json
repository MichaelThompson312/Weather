{"ast":null,"code":"var _jsxFileName = \"/Users/Michael/learning react/Weather/weather/src/App.js\";\nimport React, { useState } from 'react';\nconst api = {\n  key: '9c3d27ff9a5145ba3cdcf21ef3aa21e2',\n  base: 'https://api.openweathermap.org/data/2.5/'\n};\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evnt => {\n    if (evnt.key === 'Enter') {\n      fetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  function backgroundPicker(weather) {\n    if (weather.main !== 'undefined') {\n      console.log(weather);\n\n      if (weather.main > 90) {\n        return 'app-warm';\n      } else if (weather.main > 70 && weather.main < 90) {\n        return 'app-sunny';\n      } else if (weather.main < 0) {\n        return 'app-snow';\n      } else if (weather.main > 0 && weather.main < 30) {\n        return 'app-cold';\n      } else {\n        return 'app';\n      }\n    } else {\n      return 'app';\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: backgroundPicker(weather),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"Search...\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  })), typeof weather.main != 'undefined' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 8\n    }\n  }, weather.name, \", \", weather.sys.country), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 8\n    }\n  }, dateBuilder(new Date()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Recorded\"), \" \", Math.round(weather.main.temp), \"\\xB0F\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feels-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Feels Like:\"), \" \", Math.round(weather.main.feels_like), \"\\xB0F\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 8\n    }\n  }, weather.weather[0].main), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-sub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 8\n    }\n  }, weather.weather[0].description))) : null));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Michael/learning react/Weather/weather/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","evnt","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","backgroundPicker","main","e","target","value","name","sys","country","Date","Math","round","temp","feels_like","description"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst api = {\n\tkey: '9c3d27ff9a5145ba3cdcf21ef3aa21e2',\n\tbase: 'https://api.openweathermap.org/data/2.5/'\n};\n\nfunction App() {\n\tconst [ query, setQuery ] = useState('');\n\tconst [ weather, setWeather ] = useState({});\n\n\tconst search = (evnt) => {\n\t\tif (evnt.key === 'Enter') {\n\t\t\tfetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((result) => {\n\t\t\t\t\tsetWeather(result);\n\t\t\t\t\tsetQuery('');\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst dateBuilder = (d) => {\n\t\tlet months = [\n\t\t\t'January',\n\t\t\t'February',\n\t\t\t'March',\n\t\t\t'April',\n\t\t\t'May',\n\t\t\t'June',\n\t\t\t'July',\n\t\t\t'August',\n\t\t\t'September',\n\t\t\t'October',\n\t\t\t'November',\n\t\t\t'December'\n\t\t];\n\t\tlet days = [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' ];\n\n\t\tlet day = days[d.getDay()];\n\t\tlet date = d.getDate();\n\t\tlet month = months[d.getMonth()];\n\t\tlet year = d.getFullYear();\n\n\t\treturn `${day} ${date} ${month} ${year}`;\n\t};\n\n\tfunction backgroundPicker(weather) {\n\t\tif (weather.main !== 'undefined') {\n\t\t\tconsole.log(weather);\n\t\t\tif (weather.main > 90) {\n\t\t\t\treturn 'app-warm';\n\t\t\t} else if (weather.main > 70 && weather.main < 90) {\n\t\t\t\treturn 'app-sunny';\n\t\t\t} else if (weather.main < 0) {\n\t\t\t\treturn 'app-snow';\n\t\t\t} else if (weather.main > 0 && weather.main < 30) {\n\t\t\t\treturn 'app-cold';\n\t\t\t} else {\n\t\t\t\treturn 'app';\n\t\t\t}\n\t\t} else {\n\t\t\treturn 'app';\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={backgroundPicker(weather)}>\n\t\t\t<main>\n\t\t\t\t<div className=\"search-box\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"search-bar\"\n\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\tonKeyPress={search}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{typeof weather.main != 'undefined' ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"location-box\">\n\t\t\t\t\t\t\t<div className=\"location\">\n\t\t\t\t\t\t\t\t{weather.name}, {weather.sys.country}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"date\">{dateBuilder(new Date())}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"weather-box\">\n\t\t\t\t\t\t\t<div className=\"temp\">\n\t\t\t\t\t\t\t\t<p>Recorded</p> {Math.round(weather.main.temp)}°F\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"feels-temp\">\n\t\t\t\t\t\t\t\t<p>Feels Like:</p> {Math.round(weather.main.feels_like)}°F\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"weather\">{weather.weather[0].main}</div>\n\t\t\t\t\t\t\t<div className=\"weather-sub\">{weather.weather[0].description}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}